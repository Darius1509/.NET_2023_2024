@page "/login"
@using ECommerceApp.App.Auth
@using ECommerceApp.App.ViewModels
@inject NavigationManager navigationManager
@inject CustomStateProvider authStateProvider

<MudContainer>
    <MudGrid Justify="Justify.Center" Style="height: 100vh;">
        <MudItem xs="12" sm="8" md="6" lg="4">
            <MudPaper Elevation="2" Class="pa-4">
                <MudText Typo="Typo.h3" GutterBottom>Login</MudText>

                <MudForm Model="loginRequest" @ref="form" OnValidSubmit="OnSubmit">
                    <MudTextField T="string" Label="Username" @bind-Value="loginRequest.Username" FullWidth />
                     <MudTextField T="string" Label="Password" @bind-Value="loginRequest.Password" FullWidth InputType="InputType.Password" />

                     @if (!string.IsNullOrEmpty(error))
                    {
                        <MudText Color="Color.Error">@error</MudText>
                    }

                    <MudButton OnClick="OnSubmit" Color="Color.Primary" Style="margin-top: 20px;">Sign in</MudButton>
                </MudForm>
                <MudButton Href="register" Color="Color.Primary" Style="margin-top: 20px;">Create account</MudButton>
            </MudPaper>
        </MudItem>
    </MudGrid>
</MudContainer>

@code {
    LoginViewModel loginRequest { get; set; } = new LoginViewModel();
    string error { get; set; }
    private MudForm form;

    async Task OnSubmit()
    {
        error = null;
        try
        {
            await authStateProvider.Login(loginRequest);
            navigationManager.NavigateTo("/");
        }
        catch (Exception ex)
        {
            error = ex.Message;
        }
    }
}