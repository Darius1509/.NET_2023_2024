@page "/addressoverview"
@using ECommerceApp.App.Contracts
@using ECommerceApp.App.ViewModels
@inject IAddressDataService AddressDataService
@inject NavigationManager NavigationManager

<MudText Typo="Typo.h3">Addresses</MudText>
<br />

@if (Addresses == null)
{
    <MudText Typo="Typo.body1"><em>Loading...</em></MudText>
}
else
{
    <MudList>
        @foreach (var address in Addresses)
        {
            <MudListItem xs="12" sm="6" md="4">
                <MudPaper Elevation="2" Class="pa-4" Style="height: 160px;">
                    <MudText Typo="Typo.body1">@address.StreetName</MudText>
                    <MudText Typo="Typo.body1">@address.City</MudText>
                    <MudText Typo="Typo.body1">@address.Country</MudText>
                    <MudText Typo="Typo.body1">@address.PostalCode</MudText>
                    <MudLink Href="@($"/updateaddress/{address.Id}")" Color="Color.Primary">Update</MudLink>
                </MudPaper>
                <MudDivider />
            </MudListItem>
        }
    </MudList>
}

@code {
    public List<AddressViewModel> Addresses { get; set; }

    protected override async Task OnInitializedAsync()
    {
        Addresses = (await AddressDataService.GetAddressesAsync()).ToList();
    }
}
