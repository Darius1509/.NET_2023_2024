@page "/productoverview"
@using ECommerceApp.App.Contracts
@using ECommerceApp.App.ViewModels
@inject ITokenService TokenService
@inject IProductDataService ProductDataService
@inject ICategoryDataService CategoryDataService
@inject NavigationManager NavigationManager


<MudContainer Class="mt-16 px-8" MaxWidth="MaxWidth.False">
    <h3>Products</h3>
    <br />

    @if (Products == null)
    {
        <p><em>Loading...</em></p>
    }
    else
    {
        <MudGrid>
            @foreach (var product in Products)
            {
                <MudItem xs="12" sm="6" md="4">
                    <MudPaper Elevation="2" Class="pa-4" Style="height: 200px;">
                        <b>@product.Name</b>
                        <div>@product.Description</div>
                        <div>Category: @Categories.FirstOrDefault(c => c.Id == product.ProductCategoryId)?.Name</div>
                        <div>Quantity: @product.Quantity</div>
                        <div>Price: @product.Price</div>
                    </MudPaper>
                </MudItem>
            }
        </MudGrid>
    }
</MudContainer>

@code {
    public List<ProductViewModel> Products { get; set; }
    public List<CategoryViewModel> Categories { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var token = await TokenService.GetTokenAsync();
        if (token == null)
        {
            NavigationManager.NavigateTo("/login");
        }

        Products = (await ProductDataService.GetProductsAsync()).ToList();
        Categories = (await CategoryDataService.GetCategoriesAsync()).ToList();
    }
}
